from IPython.core.display import display, HTML
from string import Template
import json

'''-----------------------------------------------------------------------------------------------------
Class: Visualization
    Class for the vector visualization, currently this is only configured for use wth the iris.json
    dataset, and is not to be applied to the .json files generated by the callback data extractor
-----------------------------------------------------------------------------------------------------'''
class Visualization:
    data_file_name = ""

    '''-----------------------------------------------------------------------------------------------------
    Function: constructor
        Arguments:
            json_name                                takes the path to the iris.json file as an argument
    -----------------------------------------------------------------------------------------------------'''
    def __init__(self, json_name):
        self.data_file_name = "\"" + json_name + "\""

    '''-----------------------------------------------------------------------------------------------------
    Variable: d3_source_html 
        Contains the source for the d3.js library, initializes the library when called by the iPython HTML
        function
    -----------------------------------------------------------------------------------------------------'''
    d3_source_html = '<script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>'

    '''-----------------------------------------------------------------------------------------------------
    Variable: html_template 
        Create the div containing the entire visualization, and inject css and js code into the output
        boxes
    -----------------------------------------------------------------------------------------------------'''
    html_template = Template('''
        <style> $css_text </style>
        <h1> Vector Visualization </h1>
        <div class="data_table"></div>
        <script> $js_text </script>
    ''')

    '''-----------------------------------------------------------------------------------------------------
    Variable: css
        CSS styling for the visualization
    -----------------------------------------------------------------------------------------------------'''
    css = '''
    .table {
      border-collapse: collapse;
      border: #d0d4d5 solid 1px;
      border-spacing: 0px;
      font: Arial;
      text-align: center;
      padding: 5px;
      width: 100%;
    }
    .headerRowStyle {
      background-color: #fff;
      border-bottom: 3px solid #ccc;
      color: #4078a9;
      font-size: 14px;
      height: 48px;
      line-height: 14px;
      padding: 10px 5px 5px 5px
    }
    .headerCellStyle {
      border-left: 1px solid #d0d4d5;
    }
    .tableRowStyle {
      border-bottom: 1px solid #d0d4d5;
      color: #565656;
    }
    '''

    '''-----------------------------------------------------------------------------------------------------
    Variable: js_template
        Contains js code for the entire visualization.
    -----------------------------------------------------------------------------------------------------'''
    js_template = Template('''
        console.log("Loading JavaScript...")
        console.log("Loaded Data:")
        var dname = $conf_data_filepath

        /*-----------------------------------------------------------------------------------------------------
        Function: colorPicker(value)
            Argument value is the string label assigned to the data point
            Defines colors for each possible label in visualization.
        -----------------------------------------------------------------------------------------------------*/
        function colorPicker(value) {
            if (value == "Iris-setosa") {
            return "#7aa25c";
            } else if (value == "Iris-versicolor") {
            return "#f4f85e";
            } else {
            return "#d84b2a";
            }
        }

        /*-----------------------------------------------------------------------------------------------------
        Function: checkNumberIfFloat(value)
            Takes a value and checks to see if the number is a float.
        -----------------------------------------------------------------------------------------------------*/
        function checkNumberIfFloat(value) {
            return Number(value) === value && value % 1 !== 0;
        }

        /*-----------------------------------------------------------------------------------------------------
        Function: 'main'
            Reads in the JSON file, and functions as a 'main' for the creating the visualization.
        -----------------------------------------------------------------------------------------------------*/
        d3.json($conf_data_filepath, function(dataSet) {
            var div = d3.select('.data_table');                            // Select the div to place the table in
            var table = div.append("table")                                // Appends a table to the selected div
                .attr({                                                    //
                    id: "sample",                                          //
                    class: 'table'                                         //
                })                                                         //
                .classed("display", true);                                 //
            var thead = table.append("thead")                              // Appends a table head to the table (column titles)
            var tbody = table.append("tbody")                              // Append a table body to the table
            var theadRow = thead.append("tr")                              // Append a single table row to the head of the table
                .attr({                                                    //
                    class: 'headerRowStyle'                                //
                });                                                        //
            theadRow.selectAll("th")                                       // Fetches column titles from json data and creates row of column titles
                .data(d3.keys(dataSet[0]))                                 //
                .enter()                                                   //
                .append("th")                                              //
                .text(function(d) {                                        //
                    return d;                                              //
                });                                                        //
            var tableBodyRows = tbody.selectAll("tr")                      // Creates a row for each data point in the body of the table
                .data(dataSet)                                             //
                .enter()                                                   //
                .append("tr")                                              //
                .attr({                                                    //
                    class: 'tableRowStyle'                                 //
                });                                                        //
            tableBodyRows.selectAll("td")                                  // Each row is given a series of cells corresponding to each column
                .data(function(d) {                                        //
                    return d3.values(d);                                   //
                })                                                         //
                .enter()                                                   //
                .append("td")                                              //
                .text(function(d) {                                        //
                    return d;                                              //
                })                                                         //
                .append(function(d) {                                      //
                    return createSVG(d);                                   // Creating an SVG for each cell in each row
                });
        })

        /*-----------------------------------------------------------------------------------------------------
        Function: createSVG(d)
            Returns the actual SVG that is placed into the jupyter cell
        -----------------------------------------------------------------------------------------------------*/
        function createSVG(d) {
            var w = 75;                                                                                   // Default dimensions of svg
            var h = 75;                                                                                   //
            var kpi = document.createElement("div");                                                      // Create a div first
            var svg = d3.select(kpi).append("svg")                                                        // Append an svg to the created div the size of the default measurements
                .attr({                                                                                   //
                    width: w,                                                                             //
                    height: h                                                                             //
                });                                                                                       //
            var elem = svg.selectAll("div")                                                               //
                .data([d]);                                                                               //
            var elemEnter = elem.enter()                                                                  // Appends container to group SVG elements
                .append("g");                                                                             //
            if( checkNumberIfFloat(d) || Number.isInteger(d)){                                            // If the value of d is either a float or an integer, create a rectangle
                var la = (d/7);                                                                           // Variable to hold the value of this input, used to scale the rectangle
                elemEnter.append("rect")                                                                  // Appending a rectangle
                    .attr({                                                                               //
                        x: 25,                                                                            //
                        y: 10,                                                                            //
                        width: 60*la,                                                                     // Set width of rectangle to be dependent on value of data
                        height: 20                                                                        //
                    })                                                                                    //
                    .style("fill", "#4078a9");                                                            //
                elemEnter.append("text")                                                                  //
                    .style("fill", "blue")                                                                //
                    .attr("dy", 30)                                                                       //
                    .attr("dx", 25)                                                                       //
            }else{                                                                                        // If the value of d is not a float or integer, it is a string and gets a circle 
                elemEnter.append("circle")                                                                // Appending a circle
                    .attr({                                                                               //
                        cx: 28,                                                                           //
                        cy: 25,                                                                           //
                        r: 20                                                                             //
                    })                                                                                    //
                    .style("fill", colorPicker);                                                          // Color is chosen using the colorPicker function
                elemEnter.append("text")                                                                  // Adds name of actual label of this data point above the circle
                    .style("fill", "blue")                                                                //
                    .attr("dy", 30)                                                                       //
                    .attr("dx", 25)                                                                       //
            }                                                                                             //
            return kpi;                                                                                   // Return the complete div with SVG inside of it
        }
    ''')

    '''-----------------------------------------------------------------------------------------------------
    Function: display
        Passes html, css, and js code to the iPython HTML function as an argument, outputting the visualization
        into the jupyter cell.
    -----------------------------------------------------------------------------------------------------'''
    def display(self):
       display(HTML(self.d3_source_html))
       js_text = self.js_template.substitute({'conf_data_filepath': self.data_file_name})
       display(HTML(self.html_template.substitute({'css_text': self.css, 'js_text': js_text})))
